// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Research.Data.Repository.Context;

#nullable disable

namespace Research.Data.Repository.Migrations
{
    [DbContext(typeof(ResearchContext))]
    [Migration("20240314165744_Constraint_Updated")]
    partial class Constraint_Updated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Research.Data.Model.Designations", b =>
                {
                    b.Property<int>("Designation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Designation_ID"), 1L, 1);

                    b.Property<string>("Designation_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Designation_ID");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("Research.Data.Model.Feature_Permissions", b =>
                {
                    b.Property<int>("Feature_Permission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Feature_Permission_ID"), 1L, 1);

                    b.Property<string>("Feature_Permission_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.HasKey("Feature_Permission_ID");

                    b.HasIndex("Status_ID");

                    b.ToTable("Feature_Permissions");
                });

            modelBuilder.Entity("Research.Data.Model.Process", b =>
                {
                    b.Property<int>("Process_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Process_ID"), 1L, 1);

                    b.Property<string>("Process_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Process_ID");

                    b.ToTable("Process");
                });

            modelBuilder.Entity("Research.Data.Model.Reports", b =>
                {
                    b.Property<int>("Report_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Report_ID"), 1L, 1);

                    b.Property<string>("Report_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Report_ID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Research.Data.Model.Security_Group_Feature_Permissions_Map", b =>
                {
                    b.Property<int>("Security_Group_Feature_Permission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Security_Group_Feature_Permission_ID"), 1L, 1);

                    b.Property<string>("Feature_Permission_Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Feature_Permission_ID")
                        .HasColumnType("int");

                    b.Property<string>("Feature_Permission_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Security_Group_ID")
                        .HasColumnType("int");

                    b.Property<string>("Security_Group_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Security_Group_Feature_Permission_ID");

                    b.HasIndex("Feature_Permission_ID");

                    b.HasIndex("Security_Group_ID");

                    b.ToTable("Security_Group_Feature_Permissions_Map");
                });

            modelBuilder.Entity("Research.Data.Model.Security_Groups", b =>
                {
                    b.Property<int>("Security_Group_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Security_Group_ID"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Security_Group_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Security_Group_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Security_Group_ID");

                    b.HasIndex("Status_ID");

                    b.ToTable("Security_Groups");
                });

            modelBuilder.Entity("Research.Data.Model.Status", b =>
                {
                    b.Property<int>("Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Status_ID"), 1L, 1);

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Status_ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Research.Data.Model.User_Report_Map", b =>
                {
                    b.Property<int>("User_Report_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Report_ID"), 1L, 1);

                    b.Property<string>("Report_Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Report_ID")
                        .HasColumnType("int");

                    b.Property<string>("Report_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Report_ID");

                    b.HasIndex("Report_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("User_Report_Map");
                });

            modelBuilder.Entity("Research.Data.Model.User_Security_Group_Map", b =>
                {
                    b.Property<int>("User_Security_Group_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Security_Group_ID"), 1L, 1);

                    b.Property<int>("Security_Group_ID")
                        .HasColumnType("int");

                    b.Property<string>("Security_Group_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Security_Group_ID");

                    b.HasIndex("Security_Group_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("User_Security_Group_Map");
                });

            modelBuilder.Entity("Research.Data.Model.Users", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Designation_ID")
                        .HasColumnType("int");

                    b.Property<string>("Designation_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Process_ID")
                        .HasColumnType("int");

                    b.Property<string>("Process_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_ID")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("User_AD_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("User_Reset_Password_Flag")
                        .HasColumnType("bit");

                    b.HasKey("User_ID");

                    b.HasIndex("Designation_ID");

                    b.HasIndex("Process_ID");

                    b.HasIndex("Status_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Research.Data.Model.Feature_Permissions", b =>
                {
                    b.HasOne("Research.Data.Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Research.Data.Model.Security_Group_Feature_Permissions_Map", b =>
                {
                    b.HasOne("Research.Data.Model.Feature_Permissions", "Feature_Permissions")
                        .WithMany("Security_Group_Feature_Permissions")
                        .HasForeignKey("Feature_Permission_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Data.Model.Security_Groups", "Security_Groups")
                        .WithMany("Security_Group_Feature_Permissions")
                        .HasForeignKey("Security_Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature_Permissions");

                    b.Navigation("Security_Groups");
                });

            modelBuilder.Entity("Research.Data.Model.Security_Groups", b =>
                {
                    b.HasOne("Research.Data.Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Research.Data.Model.User_Report_Map", b =>
                {
                    b.HasOne("Research.Data.Model.Reports", "Report")
                        .WithMany("User_Reports")
                        .HasForeignKey("Report_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Data.Model.Users", "User")
                        .WithMany("User_Reports")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Research.Data.Model.User_Security_Group_Map", b =>
                {
                    b.HasOne("Research.Data.Model.Security_Groups", "Security_Group")
                        .WithMany("User_Security_Group")
                        .HasForeignKey("Security_Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Data.Model.Users", "User")
                        .WithMany("User_Security_Groups")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Security_Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Research.Data.Model.Users", b =>
                {
                    b.HasOne("Research.Data.Model.Designations", "Designation")
                        .WithMany()
                        .HasForeignKey("Designation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Data.Model.Process", "Process")
                        .WithMany("Users")
                        .HasForeignKey("Process_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Data.Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("Process");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Research.Data.Model.Feature_Permissions", b =>
                {
                    b.Navigation("Security_Group_Feature_Permissions");
                });

            modelBuilder.Entity("Research.Data.Model.Process", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Research.Data.Model.Reports", b =>
                {
                    b.Navigation("User_Reports");
                });

            modelBuilder.Entity("Research.Data.Model.Security_Groups", b =>
                {
                    b.Navigation("Security_Group_Feature_Permissions");

                    b.Navigation("User_Security_Group");
                });

            modelBuilder.Entity("Research.Data.Model.Users", b =>
                {
                    b.Navigation("User_Reports");

                    b.Navigation("User_Security_Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
